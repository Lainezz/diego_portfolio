@use './variables.scss' as *;
@use "sass:math";
@use "sass:list";

// MIXIN for responsive design
@mixin responsive($min-size) {
    @media (min-width: $min-size) {
        @content;
    }
}

// BASE GRID LAYOUT
@mixin base_grid_layout {
    display: grid;
    justify-items: stretch;
    align-items: stretch;

    justify-content: stretch;
    align-content: stretch;

    min-height: 100vh;

    grid-template-columns: 0.25fr repeat(3, 1fr) 0.25fr 1fr 1fr 1fr 0.3fr;
    grid-template-rows: 0.4fr 0.25fr 0.25fr repeat(3, 1fr) 0.25fr 0.4fr;

    column-gap: 1em;
    row-gap: 1em;
    padding: 1em;
}
// BASE GRID LAYOUT FOR MOBILE
@mixin base_mobile_grid_layout {
    display: grid;
    justify-items: stretch;
    align-items: stretch;

    justify-content: stretch;
    align-content: stretch;

    min-height: 100vh;

    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: 0.5fr repeat(10, 1fr) 0.5fr; // 8

    row-gap: 1em;
    padding: 1em;
}


// GRID ELEMENT
@mixin create_grid_element($st_column, $end_column, $st_row, $end_row) {
    grid-column-start: $st_column;
    grid-column-end: $end_column;
    grid-row-start: $st_row;
    grid-row-end: $end_row;
    border-radius: 16px;
    padding: 1em;
    border: 1px solid $base-color-black-1;
}

// BLACK AND WHITE GRID ELEMENT
@mixin create_black_grid_element($st_column, $end_column, $st_row, $end_row) {
    @include create_grid_element($st_column, $end_column, $st_row, $end_row);
    background-color: random-black-color();
}
@mixin create_white_grid_element($st_column, $end_column, $st_row, $end_row) {
    @include create_grid_element($st_column, $end_column, $st_row, $end_row);
    background-color: random-white-color();
}

// BLACK, WHITE, COLORFUL AND STRIPED FUNCTIONALITY GRID ELEMENT
@mixin create_black_funct_grid_element($st_column, $end_column, $st_row, $end_row) {
    @include create_grid_element($st_column, $end_column, $st_row, $end_row);
    background-color: random-black-color();
    cursor: pointer;
}
@mixin create_white_funct_grid_element($st_column, $end_column, $st_row, $end_row) {
    @include create_grid_element($st_column, $end_column, $st_row, $end_row);
    background-color: random-white-color();
    cursor: pointer;
}
@mixin create_sun_funct_grid_element($st_column, $end_column, $st_row, $end_row) {
    @include create_grid_element($st_column, $end_column, $st_row, $end_row);
    background-color: $base-color-sun;
    cursor: pointer;
}
@mixin create_moon_funct_grid_element($st_column, $end_column, $st_row, $end_row) {
    @include create_grid_element($st_column, $end_column, $st_row, $end_row);
    background-color: $base-color-moon;
    cursor: pointer;
}
@mixin create_colorful_grid_element($st_column, $end_column, $st_row, $end_row) {
    @include create_grid_element($st_column, $end_column, $st_row, $end_row);
    background-color: random-color();
}
@mixin create_striped_funct_grid_element($st_column, $end_column, $st_row, $end_row) {
    @include create_grid_element($st_column, $end_column, $st_row, $end_row);

    $color1: random-color();
    $color2: random-color();
    $color3: random-color();
    $color4: random-color();
    $color5: random-color();
    $color6: random-color();
    $color7: random-color();
    $color8: random-color();
    $color9: random-color();
    background: repeating-linear-gradient(
        135deg,
        $color1,
        $color1 10px,
        $color2 10px,
        $color2 20px,
        $color3 20px,
        $color3 30px,
        $color4 30px,
        $color4 40px,
        $color5 40px,
        $color5 50px,
        $color6 50px,
        $color6 60px,
        $color7 60px,
        $color7 70px,
        $color8 70px,
        $color8 80px,
        $color9 80px,
        $color9 90px,
    );
    cursor: pointer;
}

// FUNCTIONS FOR COLORS
@function random-color() {
    $colors: (
        $base-color-dark-blue,
        $base-color-blue-trust,
        $base-color-orange,
        $base-color-yellow,
        $base-color-green,
        $base-color-blgr,
        $base-color-gray,
        $base-color-purple
    );

    $rd: math.random(list.length($colors)); // Genera un número entre 1 y 8
    @return list.nth($colors, $rd);
}

@function random-black-color() {
    $colors: (
        $base-color-black-2,
        $base-color-black-3
    );

    $rd: math.random(list.length($colors)); // Genera un número entre 1 y 8
    @return list.nth($colors, $rd);
}

@function random-white-color() {
    $colors: (
        $base-color-off-white,
        $base-color-light-gray
    );

    $rd: math.random(list.length($colors)); // Genera un número entre 1 y 8
    @return list.nth($colors, $rd);
}